gdb操作
b* 0x4012d4
r
x $gp//看下$gp存了啥

00401230 <func4>:
  401230: 27bdffd8  addiu sp,sp,-40
  401234: afbf0024  sw  ra,36(sp)
  401238: afbe0020  sw  s8,32(sp)
  40123c: afb0001c  sw  s0,28(sp)
  401240: 03a0f021  move  s8,sp
  401244: afc40028  sw  a0,40(s8)
  401248: 8fc20028  lw  v0,40(s8)
  40124c: 00000000  nop
  401250: 28420002  slti  v0,v0,2 // 判断$v0是否小于2，是则$v0 = 1
  401254: 14400011  bnez  v0,40129c <func4+0x6c> //$v0 != 0则return 1
  401258: 00000000  nop
  40125c: 8fc20028  lw  v0,40(s8)
  401260: 00000000  nop
  401264: 2442ffff  addiu v0,v0,-1
  401268: 00402021  move  a0,v0
  40126c: 0c10048c  jal 401230 <func4> //递归引用自身f(x - 1)
  401270: 00000000  nop
  401274: 00408021  move  s0,v0 //将f(x - 1)的结果存入$s0
  401278: 8fc20028  lw  v0,40(s8)
  40127c: 00000000  nop
  401280: 2442fffe  addiu v0,v0,-2
  401284: 00402021  move  a0,v0
  401288: 0c10048c  jal 401230 <func4> //递归引用自身f(x - 2)
  40128c: 00000000  nop
  401290: 02021021  addu  v0,s0,v0 //$v0 = f(x - 1) + f(x - 2)，返回$v0
  401294: 10000002  b 4012a0 <func4+0x70>
  401298: 00000000  nop
  40129c: 24020001  li  v0,1 //return 1
  4012a0: 03c0e821  move  sp,s8
  4012a4: 8fbf0024  lw  ra,36(sp)
  4012a8: 8fbe0020  lw  s8,32(sp)
  4012ac: 8fb0001c  lw  s0,28(sp)
  4012b0: 27bd0028  addiu sp,sp,40
  4012b4: 03e00008  jr  ra
  4012b8: 00000000  nop

004012bc <phase_4>:
  4012bc:	27bdffd8 	addiu	sp,sp,-40
  4012c0:	afbf0024 	sw	ra,36(sp)
  4012c4:	afbe0020 	sw	s8,32(sp)
  4012c8:	03a0f021 	move	s8,sp
  4012cc:	3c1c0042 	lui	gp,0x42
  4012d0:	279cb190 	addiu	gp,gp,-20080
  4012d4:	afbc0010 	sw	gp,16(sp)
  4012d8:	afc40028 	sw	a0,40(s8)
  4012dc:	8fc30028 	lw	v1,40(s8)
  4012e0:	3c020040 	lui	v0,0x40
  4012e4:	244227ac 	addiu	v0,v0,10156
  4012e8:	00602021 	move	a0,v1
  4012ec:	00402821 	move	a1,v0
  4012f0:	27c20018 	addiu	v0,s8,24
  4012f4:	00403021 	move	a2,v0
  4012f8:	8f828084 	lw	v0,-32636(gp)
  4012fc:	00000000 	nop
  401300:	0040c821 	move	t9,v0
  401304:	0320f809 	jalr	t9
  401308:	00000000 	nop
  40130c:	8fdc0010 	lw	gp,16(s8)
  401310:	00401821 	move	v1,v0
  401314:	24020001 	li	v0,1
  401318:	14620005 	bne	v1,v0,401330 <phase_4+0x74> // $v0 != 1则引爆
  40131c:	00000000 	nop
  401320:	8fc20018 	lw	v0,24(s8)
  401324:	00000000 	nop
  401328:	1c400005 	bgtz	v0,401340 <phase_4+0x84>
  40132c:	00000000 	nop
  401330:	0c10087c 	jal	4021f0 <explode_bomb>
  401334:	00000000 	nop
  401338:	8fdc0010 	lw	gp,16(s8)
  40133c:	00000000 	nop
  401340:	8f82806c 	lw	v0,-32660(gp)
  401344:	00000000 	nop
  401348:	8c42002c 	lw	v0,44(v0) // 令$v0等于学号的最后一位
  40134c:	00000000 	nop
  401350:	30420001 	andi	v0,v0,0x1 // 判定$v0奇偶
  401354:	304200ff 	andi	v0,v0,0xff
  401358:	10400010 	beqz	v0,40139c <phase_4+0xe0> //if...else...结构，奇数（1）则继续，偶数（0）则跳转
  40135c:	00000000 	nop
  401360:	8fc20018 	lw	v0,24(s8) //令$v0等于输入的第一个数
  401364:	00000000 	nop
  401368:	00402021 	move	a0,v0 //传入func4的参数
  40136c:	0c10048c 	jal	401230 <func4> //跳转到func4，计算f(x)
  401370:	00000000 	nop
  401374:	8fdc0010 	lw	gp,16(s8)
  401378:	00401821 	move	v1,v0
  40137c:	24020008 	li	v0,8
  401380:	10620013 	beq	v1,v0,4013d0 <phase_4+0x114> //f(x) = $v1 != 8则引爆，则x = 5
  401384:	00000000 	nop
  401388:	0c10087c 	jal	4021f0 <explode_bomb>
  40138c:	00000000 	nop
  401390:	8fdc0010 	lw	gp,16(s8)
  401394:	1000000e 	b	4013d0 <phase_4+0x114>
  401398:	00000000 	nop
  40139c:	8fc20018 	lw	v0,24(s8)
  4013a0:	00000000 	nop
  4013a4:	00402021 	move	a0,v0 // 传入参数
  4013a8:	0c10048c 	jal	401230 <func4> //计算f(x)
  4013ac:	00000000 	nop
  4013b0:	8fdc0010 	lw	gp,16(s8)
  4013b4:	00401821 	move	v1,v0
  4013b8:	2402000d 	li	v0,13
  4013bc:	10620004 	beq	v1,v0,4013d0 <phase_4+0x114> //f(x) = $v1 != 13则引爆，则x = 6
  4013c0:	00000000 	nop
  4013c4:	0c10087c 	jal	4021f0 <explode_bomb>
  4013c8:	00000000 	nop
  4013cc:	8fdc0010 	lw	gp,16(s8)
  4013d0:	03c0e821 	move	sp,s8
  4013d4:	8fbf0024 	lw	ra,36(sp)
  4013d8:	8fbe0020 	lw	s8,32(sp)
  4013dc:	27bd0028 	addiu	sp,sp,40
  4013e0:	03e00008 	jr	ra
  4013e4:	00000000 	nop

keyNotes:if else和递归。斐波那契数列的递归解法。输入的数字x即为函数func4的入参。若ID最后一位为奇数，则输入的x计算出的f(x)应等于8，即x应等于5，否则爆炸。若ID最后一位为偶数，则输入的x计算出的f(x)应等于13，即x应等于6，否则爆炸。
201900302030:6